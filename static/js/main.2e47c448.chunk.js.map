{"version":3,"sources":["actions/types.js","reducers/loginReducer.js","reducers/registerReducer.js","reducers/projectRegisterReducer.js","reducers/rootReducer.js","components/Home/Home.js","components/Logo/Logo.js","components/NavBar/NavBar.js","components/ProjectsList/ProjectsList.js","thunks/loginThunk.js","actions/loginActions.js","components/Loader/Loader.js","components/Login/Login.js","actions/registerActions.js","thunks/registerThunk.js","components/Register/Register.js","thunks/projectRegisterThunk.js","actions/projectRegisterActions.js","components/ProjectRegistration/ProjectRegistration.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN_FORM_INPUT_CHANGE","LOGIN_FORM_LOADING","LOGIN_FORM_ERROR","LOGIN_FORM_SUCCESS","REGISTER_FORM_INPUT_CHANGE","REGISTER_FORM_LOADING","REGISTER_FORM_ERROR","REGISTER_FORM_SUCCESS","PROJECT_REGISTER_FORM_INPUT_CHANGE","PROJECT_REGISTER_DATE_CHANGE","PROJECT_REGISTER_FORM_LOADING","PROJECT_REGISTER_FORM_ERROR","PROJECT_REGISTER_FORM_SUCCESS","initialState","email","password","error","loading","username","password2","hobbyName","description","amount","endDate","rootReducer","combineReducers","login","state","arguments","length","undefined","action","type","types","Object","objectSpread","defineProperty","name","value","register","projectRegister","date","Home","react_default","a","createElement","className","react_router_dom","to","Logo","NavBar","components_Logo_Logo","exact","activeClassName","Component","ProjectsList","onFormSubmit","user","history","dispatch","actions","console","log","push","Loader","_ref","color","_ref$h","h","style","width","height","borderRight","concat","borderLeft","borderTop","borderBottom","Login","e","preventDefault","_this","props","_this$props$login","this","onInputChange","textAlign","onSubmit","onChange","placeholder","components_Loader_Loader","fontSize","connect","target","onLoginFormError","onRegisterFormSubmit","Register","_this$props$register","onProjectRegisterFormSubmit","projectInfo","ProjectRegistration","_this$props$projectRe","_this$props","onDateChange","rows","react_datepicker_es","selected","placeholderText","dateFormat","minDate","Date","App","basename","process","react","components_NavBar_NavBar","react_router","path","component","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e47c448.chunk.js","sourcesContent":["// Login types\n\nexport const LOGIN_FORM_INPUT_CHANGE = 'LOGIN_FORM_INPUT_CHANGE';\nexport const LOGIN_FORM_LOADING = 'LOGIN_FORM_LOADING';\nexport const LOGIN_FORM_ERROR = 'LOGIN_FORM_ERROR';\nexport const LOGIN_FORM_SUCCESS = 'LOGIN_FORM_SUCCESS';\n\n// Register types\n\nexport const REGISTER_FORM_INPUT_CHANGE = 'REGISTER_FORM_INPUT_CHANGE';\nexport const REGISTER_FORM_LOADING = 'REGISTER_FORM_LOADING';\nexport const REGISTER_FORM_ERROR = 'REGISTER_FORM_ERROR';\nexport const REGISTER_FORM_SUCCESS = 'REGISTER_FORM_SUCCESS';\n\n// Project Register types\n\nexport const PROJECT_REGISTER_FORM_INPUT_CHANGE = 'PROJECT_REGISTER_FORM_INPUT_CHANGE';\nexport const PROJECT_REGISTER_DATE_CHANGE = 'PROJECT_REGISTER_DATE_CHANGE';\nexport const PROJECT_REGISTER_FORM_LOADING = 'PROJECT_REGISTER_FORM_LOADING';\nexport const PROJECT_REGISTER_FORM_ERROR = 'PROJECT_REGISTER_FORM_ERROR';\nexport const PROJECT_REGISTER_FORM_SUCCESS = 'PROJECT_REGISTER_FORM_SUCCESS';","import * as types from '../actions/types';\n\nconst initialState = {\n  email: '',\n  password: '',\n  error: '',\n  loading: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOGIN_FORM_INPUT_CHANGE:\n      return {...state, [action.name]: action.value};\n    case types.LOGIN_FORM_LOADING:\n      return {...state, loading: true};\n    case types.LOGIN_FORM_ERROR:\n      return {...state, error: action.error, loading:false};\n    case types.LOGIN_FORM_SUCCESS:\n      return {...state, email: '', password: '', loading:false};\n    default:\n      return state;\n  }\n}","import * as types from '../actions/types';\n\nconst initialState = {\n  username: '',\n  email: '',\n  password: '',\n  password2: '',\n  loading: false,\n  error: ''\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.REGISTER_FORM_INPUT_CHANGE:\n      return {...state, [action.name]: action.value};\n    case types.REGISTER_FORM_LOADING:\n      return {...state, loading: true};\n    case types.REGISTER_FORM_ERROR:\n      return {...state, error: action.error, loading:false};\n    default:\n      return state;\n  }\n}","import * as types from '../actions/types';\n\nconst initialState = {\n  username: '',\n  hobbyName: '',\n  email: '',\n  description: '',\n  amount: '',\n  endDate: null,\n  loading: false,\n  error: ''\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n    case types.PROJECT_REGISTER_FORM_INPUT_CHANGE:\n      return {...state, [action.name]: action.value};\n    case types.PROJECT_REGISTER_DATE_CHANGE:\n      return {...state, endDate: action.date};\n    case types.PROJECT_REGISTER_FORM_LOADING:\n      return {...state, loading: true};\n    case types.PROJECT_REGISTER_FORM_ERROR:\n      return {...state, error: action.error, loading:false};\n    case types.PROJECT_REGISTER_FORM_SUCCESS:\n      return {...state, username: '', hobbyName: '', email: '', amount: '', description: '', loading:false, error:''}\n    default:\n      return state;\n  }\n}","import {combineReducers} from  'redux';\nimport loginReducer from './loginReducer';\nimport registerReducer from './registerReducer';\nimport projectRegisterReducer from './projectRegisterReducer';\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  register: registerReducer,\n  projectRegister: projectRegisterReducer\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Home.scss';\n\nconst Home = () => {\n  return (\n    <div className='Home'>\n      <p>This is place for yours hobby projects.</p>\n      <p>If you have account please\n        <Link className='Link' to='/login'> Sing In</Link>\n      </p>\n      <p>If you don't have account please\n        <Link className='Link' to='/register'> Sing Up</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport './Logo.scss';\n\nconst Logo = () => {\n  return (\n    <div className='Logo'>\n      <div className='Logo-main'>HC</div>\n      <span className='Logo-title'>HobbyCraft</span>\n    </div>\n  );\n};\n\nexport default Logo;","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport Logo from '../Logo/Logo';\nimport './NavBar.scss';\n\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className='NavBar'>\n        <Logo/>\n        <nav>\n          <ul>\n            <NavLink exact to='/' className='NavBar-link' activeClassName='active-link'>Home</NavLink>\n            <NavLink to='/projects' className='NavBar-link' activeClassName='active-link'>Projects</NavLink>\n            <NavLink to='/project-registration' className='NavBar-link New-Project' activeClassName='active-link'>New Project</NavLink>\n          </ul>\n        </nav>\n        <div>\n          <Link className='SignIn-link' to='/login'>Sign In</Link>\n          <Link className='SignIn-link' to='/register'>Sign Up</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './ProjectsList.scss';\n\nclass ProjectsList extends Component {\n  render() {\n    return (\n      <div className='ProjectsList'>\n        <p>Projects will be soon...</p>\n        <p>If you have project, please{' '}\n          <Link className='Link' to='/project-registration'>Register</Link>\n          {' '}yours project(hobby).\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default ProjectsList;","import * as actions from '../actions/loginActions';\n\nexport const onFormSubmit = (user, history) => (dispatch) => {\n  dispatch(actions.onFormLoading());\n  if(user.email === '' || user.password === '' ) {\n    return dispatch(actions.onLoginFormError('Please fill fields'));\n  }\n  dispatch(actions.onLoginFormSuccess(user));\n  console.log(\"Login\");\n  console.log(user)\n  history.push('/');\n}","import * as types from './types.js';\n\nexport function onInputChange(e) {\n  return {\n    type: types.LOGIN_FORM_INPUT_CHANGE,\n    name: e.target.name,\n    value: e.target.value\n  }\n}\n\nexport function onFormLoading() {\n  return {\n    type: types.LOGIN_FORM_LOADING\n  }\n}\n\nexport function onLoginFormError(error) {\n  return {\n    type: types.LOGIN_FORM_ERROR,\n    error\n  }\n}\n\nexport function onLoginFormSuccess(user) {\n  return {\n    type:types.LOGIN_FORM_SUCCESS,\n    user\n  }\n}","import React from 'react';\nimport './loader.scss';\n\nconst Loader = ({color,h=40}) => (\n  <div\n    style={{\n      width:h+'px',\n      height:h+'px',\n      borderRight:`${h/6}px solid transparent`,\n      borderLeft:`${h/6}px solid transparent`,\n      borderTop:`${h/6}px solid ${color}`,\n      borderBottom:`${h/6}px solid ${color}`,\n    }}\n    className={`Loader ${color}`}/>\n);\n\nexport default Loader;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions/loginActions';\nimport { onFormSubmit } from '../../thunks/loginThunk';\nimport Loader from '../Loader/Loader';\nimport './Login.scss';\n\n\nclass Login extends Component {\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onFormSubmit(this.props.login, this.props.history)\n  }\n\n\n  render() {\n    const { email, password, error, loading } = this.props.login\n    const { onInputChange } = this.props;\n    return (\n      <div className='Login'>\n        <h2>Please Sign In</h2>\n        {error ? <p style={{\n          color: 'red',\n          textAlign: 'center'\n        }}>{error}</p> : null}\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            type=\"email\"\n            name='email'\n            value={email}\n            onChange={onInputChange}\n            placeholder='Please enter yours email'/>\n          <input\n            type=\"password\"\n            name='password'\n            value={password}\n            onChange={onInputChange}\n            placeholder='Please enter yours password'/>\n          <button type=\"submit\">\n            {loading ? <Loader color={'#fff'} h={15} /> : 'Sign In'}\n          </button>\n        </form>\n        <p style={{fontSize: '12px'}}>If you don't have account, please{' '}\n          <Link className='Link' to='/register'>Sign Up</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    login: state.login\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInputChange: (e) => dispatch(actions.onInputChange(e)),\n  onFormSubmit: (user, history) =>dispatch(onFormSubmit(user,history)),\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import * as types from './types.js';\n\nexport function onInputChange(e) {\n  return {\n    type: types.REGISTER_FORM_INPUT_CHANGE,\n    name: e.target.name,\n    value: e.target.value\n  }\n}\n\nexport function onFormLoading() {\n  return {\n    type: types.REGISTER_FORM_LOADING\n  }\n}\n\nexport function onLoginFormError(error) {\n  return {\n    type: types.REGISTER_FORM_ERROR,\n    error\n  }\n}\n\nexport function onRegisterFormSuccess(user) {\n  return {\n    type:types.REGISTER_FORM_SUCCESS,\n    user\n  }\n}","import * as actions from '../actions/registerActions';\n\nexport const onRegisterFormSubmit = (user, history) => (dispatch) => {\n  dispatch(actions.onFormLoading());\n  if(user.username === '' || user.email === '' || user.password === '' || user.password2 === '') {\n    return dispatch(actions.onLoginFormError('Please fill fields'));\n  }\n  if(user.password !== user.password2) {\n    return dispatch(actions.onLoginFormError('Passwords doesn\\'t match'));\n  }\n  dispatch(actions.onRegisterFormSuccess(user));\n  console.log('Registration');\n  console.log(user);\n  history.push('/login');\n\n}","import React, {Component} from 'react';\nimport Loader from '../Loader/Loader';\nimport {Link} from \"react-router-dom\";\nimport './Register.scss'\nimport * as actions from \"../../actions/registerActions\";\nimport {onRegisterFormSubmit} from '../../thunks/registerThunk';\nimport {connect} from \"react-redux\";\n\nclass Register extends Component {\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onFormSubmit(this.props.register, this.props.history);\n  }\n  render() {\n    const {username, email, password, password2, error, loading} = this.props.register;\n    const {onInputChange} = this.props\n    return (\n      <div className='Register'>\n        <h2>Please Sign Up</h2>\n        {error ? <p style={{\n          color: 'red',\n          textAlign: 'center'\n        }}>{error}</p> : null}\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            type=\"text\"\n            name='username'\n            placeholder='Please enter your name'\n            value={username}\n            onChange={onInputChange}\n          />\n          <input\n            type=\"email\"\n            name='email'\n            placeholder='Please enter your email'\n            value={email}\n            onChange={onInputChange}\n          />\n          <input\n            type=\"password\"\n            name='password'\n            placeholder='Please enter your password'\n            value={password}\n            onChange={onInputChange}\n          />\n          <input\n            type=\"password\"\n            name='password2'\n            placeholder='Please repeat your password'\n            value={password2}\n            onChange={onInputChange}\n          />\n          <button type=\"submit\">\n            {loading ? <Loader color={'#fff'} h={15} /> : 'Sign In'}\n          </button>\n        </form>\n        <p style={{fontSize: '12px'}}>If you don't have account, please{' '}\n          <Link className='Link' to='/login'>Sign In</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    register: state.register\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInputChange: (e) => dispatch(actions.onInputChange(e)),\n  onFormSubmit: (user, history) => dispatch(onRegisterFormSubmit(user, history))\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(Register);","import * as actions from '../actions/projectRegisterActions';\n\nexport const onProjectRegisterFormSubmit = (projectInfo, history) => (dispatch) => {\n  dispatch(actions.onProjectRegisterFormLoading());\n  if(projectInfo.username === '' || projectInfo.hobbyName === '' || projectInfo.email === '' ||\n  projectInfo.description === '' || projectInfo.amount === '' || projectInfo.date === null) {\n    return dispatch(actions.onProjectRegisterFormError('Please fill all fields'))\n  }\n  dispatch(actions.onProjectRegisterFormSubmit(projectInfo));\n  console.log(projectInfo);\n  history.push('/projects');\n}","import * as types from './types';\n\nexport function onInputChange(e) {\n  return {\n    type: types.PROJECT_REGISTER_FORM_INPUT_CHANGE,\n    name: e.target.name,\n    value: e.target.value\n  }\n}\n\nexport function onDateChange(date) {\n  return {\n    type: types.PROJECT_REGISTER_DATE_CHANGE,\n    date\n  }\n}\n\nexport function onProjectRegisterFormLoading() {\n  return {\n    type: types.PROJECT_REGISTER_FORM_LOADING\n  }\n}\n\nexport function onProjectRegisterFormError(error) {\n  return {\n    type: types.PROJECT_REGISTER_FORM_ERROR,\n    error\n  }\n}\n\nexport function onProjectRegisterFormSubmit(projectInfo, history) {\n  return {\n    type: types.PROJECT_REGISTER_FORM_SUCCESS,\n    projectInfo\n  }\n}","import React, {Component} from 'react';\nimport './ProjectRegistration.scss';\nimport Loader from '../Loader/Loader';\nimport {connect} from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as actions from '../../actions/projectRegisterActions';\nimport {onProjectRegisterFormSubmit} from '../../thunks/projectRegisterThunk';\n\n\nclass ProjectRegistration extends Component {\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onFormSubmit(this.props.projectRegister, this.props.history)\n  }\n\n  render() {\n    const {\n      username,\n      hobbyName,\n      email,\n      description,\n      amount,\n      endDate,\n      loading,\n      error\n    } =this.props.projectRegister;\n    const {onInputChange, onDateChange} = this.props\n    return (\n      <div className='ProjectForm'>\n        <h2>Please Register Your Hobby</h2>\n        {error ? <p style={{\n          color: 'red',\n          textAlign: 'center'\n        }}>{error}</p> : null}\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            type=\"text\"\n            name='username'\n            value={username}\n            onChange={onInputChange}\n            placeholder='Please enter your name'/>\n          <input\n            type=\"text\"\n            name='hobbyName'\n            value={hobbyName}\n            onChange={onInputChange}\n            placeholder='Please enter your hobby name'/>\n          <input\n            type=\"email\"\n            name='email'\n            value={email}\n            onChange={onInputChange}\n            placeholder='Please enter your email'/>\n          <textarea\n            name=\"description\"\n            rows=\"5\"\n            value={description}\n            onChange={onInputChange}\n            placeholder='Please describe yours hobby'/>\n          <input\n            type=\"number\"\n            name='amount'\n            value={amount}\n            onChange={onInputChange}\n            placeholder='Please enter amount for yours needs'/>\n          <DatePicker\n            onChange={onDateChange}\n            selected={endDate}\n            placeholderText=\"Select project end date\"\n            dateFormat=\"yyyy MM dd\"\n            minDate={new Date()}\n          />\n          <button className=\"form-submit\" type=\"submit\">\n            {loading ? <Loader color={'#fff'} h={15} /> : 'Sign In'}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projectRegister: state.projectRegister\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInputChange: (e) => dispatch(actions.onInputChange(e)),\n  onDateChange: (date) => dispatch(actions.onDateChange(date)),\n  onFormSubmit: (projectInfo, history)=>dispatch(onProjectRegisterFormSubmit(projectInfo,history))\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(ProjectRegistration);","import React, { Component, Fragment } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport NavBar from './components/NavBar/NavBar';\nimport ProjectsList from  './components/ProjectsList/ProjectsList';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport ProjectRegistration from './components/ProjectRegistration/ProjectRegistration';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Fragment>\n          <NavBar/>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/projects' component={ProjectsList}/>\n            <Route path='/login' component={Login}/>\n            <Route path='/register' component={Register}/>\n            <Route path='/project-registration' component={ProjectRegistration}/>\n          </Switch>\n        </Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}>\n  <App/>\n</Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}